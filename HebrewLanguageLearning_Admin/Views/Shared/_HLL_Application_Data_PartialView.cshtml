@model HebrewLanguageLearning_Admin.Models.HLL_ApplicationModel
<div class="block-inner">
    <div class="block-inner">
        <h6 class="heading-hr">
            <i class="icon-spinner7"></i> Application Data <small class="display-block">All Application Data about the Language Learning</small>
        </h6>
    </div>

  
    @for (int i = 0; i < Convert.ToInt32(Model.DataCounter); i++)
    {
        var j = i + 1;
        <div class="form-group">
            <div class="row">
                <div class="col-md-3">
                    <label>Hebrew Application-@j:</label>
                    @Html.EditorFor(model => model.AppSentenceDynamicTextBox[i], new { htmlAttributes = new { @id = "AppSentenceDynamicTextBox" + i, @class = "form-control", @placeholder = "Hebrew Application - " + j } })
                    @Html.ValidationMessageFor(model => model.AppSentenceDynamicTextBox[i], "", new { @class = "text-danger" })
                    <label id="AppSentenceDynamicTextBoxErrorMessage" class="text-danger" style="display:none;">Please Enter At least one definition</label>
                </div>
                <div class="col-md-3">
                    <label>Picture/Video @j:</label>

                    <div class="controls imgParent">
                        @Html.TextBoxFor(p => p.ImgVdofile[i], null, new { data_val = "false", type = "file", @class = "input-file fileUploadImgAndVideo", name = "file", id = @j })
                        <span class="fileupload"><span class="icon-upload2"></span>Choose File</span>
                        @Html.ValidationMessageFor(n => n.ImgVdofile[i], null, new { @class = "text_danger" })
                        @Html.HiddenFor(h => h.VideoUrl[i], new { name = "VideoUrl0", id = "VideoUrl"+i, @class = "video_url" })
                        <div class="col-md-2 output" id="@("output" + j)"></div>
                    </div>


                </div>
                <div class="col-md-3">
                    <label>Sound @j:</label>

                    <div class="controls imgParent">

                        @Html.TextBoxFor(p => p.Soundfile[i], null, new { data_val = "false", type = "file", @class = "input-file SoundfileMultiple", name = "Soundfile", accept = ".mp3,audio/*" , id = @j })
                        <span class="fileupload"><span class="icon-upload2"></span>Choose File</span>
                        @Html.ValidationMessageFor(n => n.Soundfile[i], null, new { @class = "text_danger", @style = "color: red !important;" })
                        @Html.HiddenFor(h => h.SoundUrl[i], new { name = "SoundUrl0", id = "SoundUrl" + i, @class = "sound_url" })
                        <div class="col-md-2 output" id="@("outputMultiple" + j)"></div>
                        <label id="fileUploaderErrorMessage" class="text-danger" style="display:none;color:red;margin-top: 30px;">Please Upload Sound file in MP3 format</label>

                    </div>
                </div>
                <div class="col-md-3">
                    <label>Correct Answer-@j:</label>
                    <br />
                    <a data-toggle="modal" class="btn btn-success" role="button" href="#form_modal_Definition" onclick="SetCorrectAnswer(@j)">  Edit</a>

                </div>
            </div>
        </div>


    }
    <div class="form-group">
        <div class="" id="TextBoxContainer">
        </div>
    </div>
    <input type="button" value="+ Add Hebrew Application" onclick="AddTextBox()" class="btn btn-info">
</div>
