@model HebrewLanguageLearning_Admin.Models.HLL_DictionaryModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/jquery-1.10.2.js"></script>

<div class="page-content-inner ">
    <br>
    <h2>Dictionary Entries</h2>

    @using (Ajax.BeginForm("Create", "DictionaryEntries", new AjaxOptions { LoadingElementId = "frmloading", UpdateTargetId = "result", OnBegin = "return StartValidation();", HttpMethod = "POST", OnFailure = "OnError(e);" }, new { enctype = "multipart/form-data" }))
    {
        <div id="frmloading" style="display:none;">
            <div class="loading">Loading&#8230;</div>
        </div>

        @Html.AntiForgeryToken()
        <Div action="#" role="form">
            <div class="panel panel-default">
                <div class="panel-heading"><h6 class="panel-title"><i class="icon-pencil3"></i>Add Dictionary</h6></div>
                <div class="panel-body">
                    <div class="text-danger" id="result"></div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-6">
                                <label>English:<span class="text-danger">(*)</span></label>
                                @Html.EditorFor(model => model.DicEnglish, new { htmlAttributes = new { @class = "form-control", @placeholder = "Entry English Name" } })
                                @Html.ValidationMessageFor(model => model.DicEnglish, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-6">
                                <label>Hebrew:<span class="text-danger">(*)</span></label>
                                @Html.EditorFor(model => model.DicHebrew, new { htmlAttributes = new { @class = "form-control", @placeholder = "כניסה שם באנגלית" } })
                                @Html.ValidationMessageFor(model => model.DicHebrew, "", new { @class = "text-danger" })

                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-6">
                                <label>Strong's Number:<span class="text-danger">(*)</span></label>
                                @Html.EditorFor(model => model.DicStrongNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Strong's Number" } })
                                @Html.ValidationMessageFor(model => model.DicStrongNo, "", new { @class = "text-danger" })
                            </div>
                            @*<div style="border-color:sandybrown;border-bottom-style:solid;"><span class="text-danger">(*)</span>*@
                            <div class="col-md-3">
                                <label>Sound:</label>
                                <div class="controls imgParent">
                                    @Html.HiddenFor(h => h.SoundUrl, new { name = "SoundUrl", id = "SoundUrl" })
                                    @Html.TextBoxFor(p => p.Soundfile, null, new { data_val = "false", type = "file", @class = "input-file", name = "Soundfile", accept = ".mp3,audio/*", id = "Soundfile" })
                                    <span class="fileupload"><span class="icon-upload2"></span>Choose File</span>
                                    @Html.ValidationMessageFor(n => n.Soundfile, null, new { @class = "text_danger", @style = "color: red !important;" })
                                    <div class="col-md-2" id="output"></div>
                                    @*<label id="fileUploaderErrorMessage" class="text-danger" style="display:none;color:red;margin-top: 30px;">Please Upload Sound file in MP3 format</label>*@
                                </div>
                            </div>
                            <div class="col-md-3">
                                <label>Sound Title:</label>
                                @Html.EditorFor(model => model.SoundTitle, new { htmlAttributes = new { @class = "form-control", @placeholder = "Sound Title" } })
                                @Html.ValidationMessageFor(model => model.SoundTitle, "", new { @class = "text-danger" })
                            </div>
                            @*</div>*@
                        </div>
                    </div>
                    <hr>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-6">
                                <label>Language Learning Definition: 1</label>
                                @Html.EditorFor(model => model.DicLanguageLearningDefinitionDynamicTextBox[0], new { htmlAttributes = new { @class = "form-control", @placeholder = "Language Learning Definition 1" } })
                            </div>
                            <div class="col-md-6">
                                <label>Language Learning Definition: 2</label>
                                @Html.EditorFor(model => model.DicLanguageLearningDefinitionDynamicTextBox[1], new { htmlAttributes = new { @class = "form-control", @placeholder = "Language Learning Definition 2" } })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row" id="TextBoxContainerLLD">
                            </div>
                        </div>
                        <input type="button" value="+ Add Language Learning Definition" onclick="AddLanguageLearningDefinition()" class="btn btn-info">
                    </div>
                    <hr>
                    <div class="block-inner">
                        <div class="block-inner">
                            <h6 class="heading-hr">
                                <i class="icon-spinner7"></i> Dictionary Definition <small class="display-block">All Definition about the Language Learning</small>
                            </h6>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-6">
                                    <label>Dictionary definition-1:<span class="text-danger">(*)</span></label>
                                    @Html.EditorFor(model => model.DicDefinitionDynamicTextBox[0], new { htmlAttributes = new { @id = "DicDefinitionDynamicTextBox", @class = "form-control", @placeholder = "Dictionary definition - 1" } })
                                    @Html.ValidationMessageFor(model => model.DicDefinitionDynamicTextBox[0], "", new { @class = "text-danger" })
                                    <label id="DicDefinitionDynamicTextBoxErrorMessage" class="text-danger" style="display:none;">Please Enter At least one definition</label>
                                </div>

                                <div class="col-md-6">
                                    <label>Dictionary definition-2:</label>
                                    @Html.EditorFor(model => model.DicDefinitionDynamicTextBox[1], new { htmlAttributes = new { @id = "DicDefinitionDynamicTextBox", @class = "form-control", @placeholder = "Dictionary definition - 2" } })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-6">
                                    <label>Dictionary definition-3:</label>
                                    @Html.EditorFor(model => model.DicDefinitionDynamicTextBox[2], new { htmlAttributes = new { @id = "DicDefinitionDynamicTextBox", @class = "form-control", @placeholder = "Dictionary definition - 3" } })
                                </div>

                                <div class="col-md-6">
                                    <label>Dictionary definition-4:</label>
                                    @Html.EditorFor(model => model.DicDefinitionDynamicTextBox[3], new { htmlAttributes = new { @id = "DicDefinitionDynamicTextBox", @class = "form-control", @placeholder = "Dictionary definition - 4" } })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-6">
                                    <label>Dictionary definition-5:</label>
                                    @Html.EditorFor(model => model.DicDefinitionDynamicTextBox[4], new { htmlAttributes = new { @id = "DicDefinitionDynamicTextBox", @class = "form-control", @placeholder = "Dictionary definition - 5" } })
                                </div>

                                <div class="col-md-6">
                                    <label>Dictionary definition-6:</label>
                                    @Html.EditorFor(model => model.DicDefinitionDynamicTextBox[5], new { htmlAttributes = new { @id = "DicDefinitionDynamicTextBox", @class = "form-control", @placeholder = "Dictionary definition - 6" } })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="row" id="TextBoxContainer">
                            </div>
                        </div>
                        <input type="button" value="+ Add Dictionary Definition" onclick="AddTextBox()" class="btn btn-info">
                    </div>

                </div>
                <hr>
                <hr>
                <div class="form-group panel-body">
                    <div class="form-actions text-right">
                        <input type="reset" value="Reset" class="btn btn-danger">
                        <input type="submit" value="Save and Continue" class="btn btn-primary">
                    </div>
                </div>
            </div>
        </Div>

    }

</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="https://code.jquery.com/jquery-2.2.4.min.js" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=" crossorigin="anonymous"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script type="text/javascript">

    var textboxId = 7; var textboxName = 6;
    var textboxIdLLD = 3; var textboxNameLLD = 2;
    var OnError = function (e) {
        console.log(e);
    }
   
    function getFileExtension(filename) {
        if (typeof filename != 'undefined') {
            return filename.slice((filename.lastIndexOf(".") - 1 >>> 0) + 2);
        }
        return "";

    }
    function GetDynamicTextBox(value) {
        var div = "";
        if (value == 0) {
            div = $("<div style='margin-top: 15px;' class='col-md-6'> <label>Dictionary definition-" + textboxId + ":</label>" +
            "<input class='form-control text-box single-line' id='DicDefinitionDynamicTextBox' name='DicDefinitionDynamicTextBox[" + textboxName + "]' placeholder='Dictionary definition - " + textboxId + "' type='text' value=''></div>");
            textboxName++;
            textboxId++;
        }
        else {
            div = $("<div style='margin-top: 15px;' class='col-md-6'> <label>Language Learning Definition-" + textboxIdLLD + ":</label>" +
                   "<input class='form-control text-box single-line' id='LanLearDefinitionDynamicTextBox' name='DicLanguageLearningDefinitionDynamicTextBox[" + textboxNameLLD + "]' placeholder='Language Learning Definition - " + textboxIdLLD + "' type='text' value=''></div>");
            textboxNameLLD++;
            textboxIdLLD++;
        }
        return div;
    }

    function AddTextBox() {
        var div = GetDynamicTextBox(0);
        $("#TextBoxContainer").append(div);
    }
    $(function () {
        var values = eval('@Html.Raw(ViewBag.Values)');
        if (values != null) {
            $("#TextBoxContainer").html("");
            $(values).each(function () {
                $("#TextBoxContainer").append(GetDynamicTextBox(this));
            });
        }
    });
    var AddLanguageLearningDefinition = function () {
        var div = GetDynamicTextBox(1);
        $("#TextBoxContainerLLD").append(div);
    }
    function StartValidation() {

        //var fileUploaderData = $('#AudioToUpload').val();
        //var DicDefinitionDynamicTextBoxData = $('#DicDefinitionDynamicTextBox').val(); $('#DicDefinitionDynamicTextBoxErrorMessage').hide();
        //if (typeof DicDefinitionDynamicTextBoxData == 'undefined' || DicDefinitionDynamicTextBoxData == "") {
        //    $('#DicDefinitionDynamicTextBoxErrorMessage').show();
        //    return false;
        //}
        //debugger;
        //var fileExt = getFileExtension(fileUploaderData);
        //if (typeof fileUploaderData == 'undefined' || fileUploaderData == "" || fileExt != 'mp3') {
        //    $('#fileUploaderErrorMessage').show();
        //    if ($('#SoundUrl').val().length < 1) {
        //        return false;
        //    } else {
        //        $('#fileUploaderErrorMessage').hide();
        //        return true;
        //    }
        //}
        //else
        //    $('#fileUploaderErrorMessage').hide();
        //$('#frmloading').show();
        return true;
    }
</script>
